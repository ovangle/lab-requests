"""empty message

Revision ID: 6fa5080e5f64
Revises: 581ddc69e4b9
Create Date: 2024-09-23 14:41:03.309356

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6fa5080e5f64'
down_revision: Union[str, None] = '581ddc69e4b9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('equipment_installation_provision')
    op.drop_table('software_installation_provision')
    op.add_column('lab_provision', sa.Column('action_params_json', postgresql.JSON(astext_type=sa.Text()), server_default='{}', nullable=False))
    op.add_column('lab_provision', sa.Column('provisionable_type', sa.VARCHAR(length=64), nullable=False))
    op.add_column('lab_provision', sa.Column('provisionable_id', sa.UUID(), nullable=False))
    op.drop_column('lab_provision', 'action_params')
    op.drop_column('lab_provision', 'type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('lab_provision', sa.Column('type', sa.VARCHAR(length=64), autoincrement=False, nullable=False))
    op.add_column('lab_provision', sa.Column('action_params', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=False))
    op.drop_column('lab_provision', 'provisionable_id')
    op.drop_column('lab_provision', 'provisionable_type')
    op.drop_column('lab_provision', 'action_params_json')
    op.create_table('software_installation_provision',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('software_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('installation_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('min_version', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('requires_license', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_paid_software', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['lab_provision.id'], name='software_installation_provision_id_fkey'),
    sa.ForeignKeyConstraint(['installation_id'], ['software_installation.id'], name='software_installation_provision_installation_id_fkey'),
    sa.ForeignKeyConstraint(['software_id'], ['software.id'], name='software_installation_provision_software_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='software_installation_provision_pkey')
    )
    op.create_table('equipment_installation_provision',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('equipment_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('installation_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], name='equipment_installation_provision_equipment_id_fkey'),
    sa.ForeignKeyConstraint(['id'], ['lab_provision.id'], name='equipment_installation_provision_id_fkey'),
    sa.ForeignKeyConstraint(['installation_id'], ['equipment_installation.id'], name='equipment_installation_provision_installation_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='equipment_installation_provision_pkey')
    )
    # ### end Alembic commands ###
