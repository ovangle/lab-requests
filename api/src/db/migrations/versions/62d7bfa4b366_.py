"""empty message

Revision ID: 62d7bfa4b366
Revises: 42e5608e160c
Create Date: 2024-04-11 02:10:27.699887

"""
from typing import Sequence, Union
from uuid import uuid4

from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm
from sqlalchemy.dialects import postgresql

from db.models.lab.lab_resource_container import LabResourceContainer
from db.models.research.plan import ResearchPlan

# revision identifiers, used by Alembic.
revision: str = "62d7bfa4b366"
down_revision: Union[str, None] = "42e5608e160c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "lab_resource_container",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("consumer_type", sa.VARCHAR(length=255), nullable=False),
        sa.Column("consumer_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column("lab_resource", sa.Column("container_id", sa.UUID(), nullable=False))
    op.add_column("lab_resource", sa.Column("index", sa.INTEGER(), nullable=False))
    op.create_foreign_key(
        "lab_resource_container_fk",
        "lab_resource",
        "lab_resource_container",
        ["container_id"],
        ["id"],
    )
    op.add_column("research_plan", sa.Column("container_id", sa.UUID(), nullable=True))
    op.create_foreign_key(
        "research_plan_container_fk",
        "research_plan",
        "lab_resource_container",
        ["container_id"],
        ["id"],
    )

    session = orm.Session(bind=op.get_bind())
    for plan in session.scalars(sa.select(ResearchPlan)):
        container = LabResourceContainer(plan, id=uuid4())
        plan.container_id = container.id
        session.add(container)
    session.commit()
    op.alter_column("research_plan", "container_id", nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "research_plan_container_fk", "research_plan", type_="foreignkey"
    )
    op.drop_column("research_plan", "container_id")
    op.drop_constraint("lab_resource_container_fk", "lab_resource", type_="foreignkey")
    op.drop_column("lab_resource", "index")
    op.drop_column("lab_resource", "container_id")
    op.drop_table("lab_resource_container")
    # ### end Alembic commands ###
