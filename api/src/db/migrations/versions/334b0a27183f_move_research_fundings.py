"""move research_fundings

Revision ID: 334b0a27183f
Revises: 644950c52ab7
Create Date: 2024-09-27 12:22:42.782498

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from db.models.uni.funding.purchase_status import PurchaseStatus, PURCHASE_STATUS_TRANSITION

# revision identifiers, used by Alembic.
revision: str = '334b0a27183f'
down_revision: Union[str, None] = '644950c52ab7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('uni_funding',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.VARCHAR(length=32), nullable=False),
    sa.Column('description', sa.TEXT(), server_default='', nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_uni_funding_created_at'), 'uni_funding', ['created_at'], unique=False)
    op.create_table('uni_budget',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('funding_id', sa.UUID(), nullable=False),
    sa.Column('lab_id', sa.UUID(), nullable=False),
    sa.Column('research_plan_id', sa.UUID(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.ForeignKeyConstraint(['funding_id'], ['uni_funding.id'], ),
    sa.ForeignKeyConstraint(['lab_id'], ['lab.id'], ),
    sa.ForeignKeyConstraint(['research_plan_id'], ['research_plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_uni_budget_created_at'), 'uni_budget', ['created_at'], unique=False)
    op.create_table('uni_purchase',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('purchase_order_type', sa.VARCHAR(length=64), nullable=False),
    sa.Column('purchase_order_id', sa.UUID(), nullable=False),
    sa.Column('budget_id', sa.UUID(), nullable=False),
    sa.Column('index', sa.INTEGER(), nullable=False),
    sa.Column('estimated_cost', sa.FLOAT(), nullable=False),
    sa.Column('actual_cost', sa.FLOAT(), nullable=False),
    sa.Column('status', postgresql.ENUM('ORDERED', 'READY', 'PAID', 'REVIEWED', name='uni_purchase_status'), nullable=False),
    sa.Column('_order_mark', PURCHASE_STATUS_TRANSITION(PurchaseStatus.ORDERED, astext_type=sa.Text()), nullable=False),
    sa.Column('_ready_mark', PURCHASE_STATUS_TRANSITION(PurchaseStatus.READY, astext_type=sa.Text()), nullable=True),
    sa.Column('receipt_description', sa.TEXT(), nullable=False),
    sa.Column('paid', PURCHASE_STATUS_TRANSITION(PurchaseStatus.PAID, astext_type=sa.Text()), nullable=True),
    sa.Column('review_mark', PURCHASE_STATUS_TRANSITION(PurchaseStatus.REVIEWED, astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.ForeignKeyConstraint(['budget_id'], ['uni_budget.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('purchase_order_type', 'purchase_order_id')
    )
    op.create_index(op.f('ix_uni_purchase_budget_id'), 'uni_purchase', ['budget_id'], unique=False)
    op.create_index(op.f('ix_uni_purchase_created_at'), 'uni_purchase', ['created_at'], unique=False)
    op.create_index(op.f('ix_uni_purchase_index'), 'uni_purchase', ['index'], unique=False)
    op.drop_index('ix_research_budget_created_at', table_name='research_budget')

    op.drop_table('research_budget')
    op.drop_index('ix_research_funding_created_at', table_name='research_funding')
    op.drop_table('research_funding')
    op.drop_index('ix_research_purchase_budget_id', table_name='research_purchase')
    op.drop_index('ix_research_purchase_created_at', table_name='research_purchase')
    op.drop_index('ix_research_purchase_index', table_name='research_purchase')
    op.drop_table('research_purchase')
    op.drop_constraint('lab_provision_budget_id_fkey', 'lab_provision', type_='foreignkey')
    op.drop_constraint('lab_provision_purchase_id_fkey', 'lab_provision', type_='foreignkey')
    op.create_foreign_key(None, 'lab_provision', 'uni_purchase', ['purchase_id'], ['id'])
    op.create_foreign_key(None, 'lab_provision', 'uni_budget', ['budget_id'], ['id'])
    op.drop_constraint('material_inventory_procurement_purchase_id_fkey', 'material_inventory_procurement', type_='foreignkey')
    op.create_foreign_key(None, 'material_inventory_procurement', 'uni_purchase', ['purchase_id'], ['id'])
    op.drop_constraint('research_plan_funding_id_fkey', 'research_plan', type_='foreignkey')
    op.create_foreign_key(None, 'research_plan', 'uni_funding', ['funding_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'research_plan', type_='foreignkey')
    op.create_foreign_key('research_plan_funding_id_fkey', 'research_plan', 'research_funding', ['funding_id'], ['id'])
    op.drop_constraint(None, 'material_inventory_procurement', type_='foreignkey')
    op.create_foreign_key('material_inventory_procurement_purchase_id_fkey', 'material_inventory_procurement', 'research_purchase', ['purchase_id'], ['id'])
    op.drop_constraint(None, 'lab_provision', type_='foreignkey')
    op.drop_constraint(None, 'lab_provision', type_='foreignkey')
    op.create_foreign_key('lab_provision_purchase_id_fkey', 'lab_provision', 'research_purchase', ['purchase_id'], ['id'])
    op.create_foreign_key('lab_provision_budget_id_fkey', 'lab_provision', 'research_budget', ['budget_id'], ['id'])
    op.create_table('research_purchase',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('purchase_order_type', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('purchase_order_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('budget_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('estimated_cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('actual_cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('ORDERED', 'READY', 'PAID', 'REVIEWED', name='research_purchase_status'), autoincrement=False, nullable=False),
    sa.Column('_order_mark', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('_ready_mark', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('receipt_description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('paid', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('review_mark', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['budget_id'], ['research_budget.id'], name='research_purchase_budget_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='research_purchase_pkey'),
    sa.UniqueConstraint('purchase_order_type', 'purchase_order_id', name='research_purchase_purchase_order_type_purchase_order_id_key')
    )
    op.create_index('ix_research_purchase_index', 'research_purchase', ['index'], unique=False)
    op.create_index('ix_research_purchase_created_at', 'research_purchase', ['created_at'], unique=False)
    op.create_index('ix_research_purchase_budget_id', 'research_purchase', ['budget_id'], unique=False)
    op.create_table('research_funding',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), server_default=sa.text("''::text"), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='research_funding_pkey'),
    sa.UniqueConstraint('name', name='research_funding_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_research_funding_created_at', 'research_funding', ['created_at'], unique=False)
    op.create_table('research_budget',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('funding_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('lab_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('research_plan_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['funding_id'], ['research_funding.id'], name='research_budget_funding_id_fkey'),
    sa.ForeignKeyConstraint(['lab_id'], ['lab.id'], name='research_budget_lab_id_fkey'),
    sa.ForeignKeyConstraint(['research_plan_id'], ['research_plan.id'], name='research_budget_research_plan_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='research_budget_pkey')
    )
    op.create_index('ix_research_budget_created_at', 'research_budget', ['created_at'], unique=False)
    op.drop_index(op.f('ix_uni_purchase_index'), table_name='uni_purchase')
    op.drop_index(op.f('ix_uni_purchase_created_at'), table_name='uni_purchase')
    op.drop_index(op.f('ix_uni_purchase_budget_id'), table_name='uni_purchase')
    op.drop_table('uni_purchase')
    op.drop_index(op.f('ix_uni_budget_created_at'), table_name='uni_budget')
    op.drop_table('uni_budget')
    op.drop_index(op.f('ix_uni_funding_created_at'), table_name='uni_funding')
    op.drop_table('uni_funding')
    # ### end Alembic commands ###
